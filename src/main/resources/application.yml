spring:
  datasource:
    url: jdbc:postgresql://db-app:5432/postgres
    username: postgres
    password: 1
    driver-class-name: org.postgresql.Driver
  jpa:
    database: postgresql
    properties:
      hibernate:
        dialect: org.hibernate.spatial.dialect.postgis.PostgisPG10Dialect
        format_sql: true
    show-sql: true
  kafka:
    bootstrap-servers: kafka:29092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    open-in-view: false

  thymeleaf:
    cache: false
    mode: HTML

logging:
  level:
    org.hibernate.orm.jdbc.bind: trace

server:
  port: 8080

topic:
  vehicle:
    name: t.vehicle.generate
  track:
    name: t.track.generate
---
spring:
  config:
    activate:
      on-profile: "local"
  datasource:
    url: jdbc:postgresql://localhost:5432/postgres
  kafka:
    bootstrap-servers: localhost:9092
    admin:
      properties:
        request:
          timeout:
            ms: 1000
---
spring:
  config:
    activate:
      on-profile: "docker"
  datasource:
    url: jdbc:postgresql://db-app:5433/postgres
  kafka:
    bootstrap-servers: kafka:29092